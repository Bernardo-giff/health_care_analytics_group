ts.plot(data$display_ads, col="magenta", main="Display")
#General Adwords
result_irf_general_adwords<-matrix(nrow = 8, ncol = 1)
for (i in 1:8) {
se <- (irfs$Upper$DdisplayAds_cut[i]-irfs$Lower$DdisplayAds_cut[i])/(2*1.96)
t_irf_general_adwords<- irfs$irf$DdisplayAds_cut[i]/se
if (t_irf_general_adwords>1) {
result_irf_general_adwords[i] <- irfs$irf$DdisplayAds_cut[i]
} else {
result_irf_general_adwords[i] <-0
}
}
result_irf_general_adwords #print out the results
lr_general_adwords <- sum(result_irf_general_adwords)
lr_general_adwords
#Brand Adwords
result_irf_brand_adwords<-matrix(nrow = 8, ncol = 1)
for (i in 1:8) {
se <- (irfs$Upper$LbrandAds_cut[i]-irfs$Lower$LbrandAds_cut[i])/(2*1.96)
t_irf_brand_adwords<- irfs$irf$LbrandAds_cut[i]/se
if (t_irf_brand_adwords>1) {
result_irf_brand_adwords[i] <- irfs$irf$LbrandAds_cut[i]
} else {
result_irf_brand_adwords[i] <-0
}
}
result_irf_brand_adwords #print out the results
lr_brand_adwords <- sum(result_irf_brand_adwords)
lr_brand_adwords
#Brand Adwords
result_irf_brand_adwords<-matrix(nrow = 8, ncol = 1)
for (i in 1:8) {
se <- (irfs$Upper$LbrandAds_cut[i]-irfs$Lower$LbrandAds_cut[i])/(2*1.96)
t_irf_brand_adwords<- irfs$irf$LbrandAds_cut[i]/se
if (t_irf_brand_adwords>1) {
result_irf_brand_adwords[i] <- irfs$irf$LbrandAds_cut[i]
} else {
result_irf_brand_adwords[i] <-0
}
}
result_irf_brand_adwords #print out the results
lr_brand_adwords <- sum(result_irf_brand_adwords)
lr_brand_adwords
# This command sets the wd for the R project
#setwd("/Users/h.abdulla/Dropbox/Mac (3)/Desktop/Imperial/Modules/Y2/Term 3/Healthcare Analytics/Group Assignment/Healthcare Project")
# This is Bernardos' wd. Left it commented
#setwd("/Users/bernardocarvalho/Desktop/imperial_repos/health_care_analytics_group")
knitr::opts_chunk$set(echo = TRUE)
install.packages("haven")
library(haven)
library(tidyr)
library(ggplot2)
library(dplyr)
library(stargazer)
library(stringr)
library(naniar)
# Change this if you saves the file in a different path
file = "gss_spss_with_codebook/GSS7218_R3.sav"
# Read the data file
raw_data <- read_sav(file)
# Filtering data for only 2016
data <- raw_data %>%
filter(YEAR == 2016)
# Calculate the total number of rows in the dataframe
total_rows <- nrow(data_2016)
# This command sets the wd for the R project
#setwd("/Users/h.abdulla/Dropbox/Mac (3)/Desktop/Imperial/Modules/Y2/Term 3/Healthcare Analytics/Group Assignment/Healthcare Project")
# This is Bernardos' wd. Left it commented
#setwd("/Users/bernardocarvalho/Desktop/imperial_repos/health_care_analytics_group")
knitr::opts_chunk$set(echo = TRUE)
install.packages("haven")
library(haven)
library(tidyr)
library(ggplot2)
library(dplyr)
library(stargazer)
library(stringr)
library(naniar)
# Change this if you saves the file in a different path
file = "gss_spss_with_codebook/GSS7218_R3.sav"
# Read the data file
raw_data <- read_sav(file)
# Filtering data for only 2016
data <- raw_data %>%
filter(YEAR == 2016)
# Calculate the total number of rows in the dataframe
total_rows <- nrow(data)
# Calculate the percentage of non-NA values for each column
non_na_percentage <- colSums(!is.na(data_2016)) / total_rows
# Calculate the total number of rows in the dataframe
total_rows <- nrow(data)
# Calculate the percentage of non-NA values for each column
non_na_percentage <- colSums(!is.na(data)) / total_rows
# Identify columns with more than 10% non-NA values
columns_with_more_than_40_percent_non_na <- names(non_na_percentage[non_na_percentage > 0.40])
# Print the column names
print(columns_with_more_than_40_percent_non_na)
# Selecting candidate variables
data <- data %>%
select(
# First, start with Mental health related variables
# These are the Health variables
SNSMOTH1   # DO YOU USE ANY OTHER SOCIAL NETWORKS
, INTWKDYM #  MINUTES OF INTERNET USE ON WEEKDAYS
, INTWKDYH #  HOURS OF INTERNET USE ON WEEKDAYS
, INTWKENM #  MINUTES OF INTERNET USE ON WEEKENDS
, INTWKENH #  HOURS OF INTERNET USE ON WEEKENDS
, MNTLHLTH #  DAYS OF POOR MENTAL HEALTH PAST 30 DAYS
, WEIGHT   # Weight
, HEIGHT   # R IS HOW TALL
#, LIFENOW  # R'S RATING OF LIFE OVERALL NOW FROM 0-10
#, DEPRESS  # TOLD HAVE DEPRESSION
#, HLTHPHYS # R'S PHYSICAL HEALTH
#, QUALLIFE # R'S QUALITY OF LIFE
#, HLTHMNTL # R'S MENTAL HEALTH, MOOD, AND ABILITY TO THINK.
, TWITTER  # CREATE DUMMY VARIABLE FOR THESE. IF ANY IS TRUE, MAKE IT 1, ELSE 0
, LINKEDIN
, SNAPCHAT
, INSTAGRM
, FACEBOOK
# Then, control variables
, YEAR     # GSS YEAR FOR THIS RESPONDENT
# Labour
, ID       # RESPONDENT ID NUMBER
, WRKSTAT  # LABOR FORCE STATUS
, HRS1     # NUMBER OF HOURS WORKED LAST WEEK
# , HRS2     # NUMBER OF HOURS USUALLY WORK A WEEK
#, COMMUTE  # TRAVEL TIME TO WORK
,
, # Social
, SEX      # RESPONDENTS SEX
, RACE     # RACE OF RESPONDENT
, BORN     # WAS R BORN IN THIS COUNTRY
, REGION   # REGION OF INTERVIEW
# , INCOME06 # TOTAL FAMILY INCOME
#, RINCOM06 # RESPONDENTS INCOME
, INCOME16 # TOTAL FAMILY INCOME
, RINCOM16 # RESPONDENTS INCOME
, CHILDS   # NUMBER OF CHILDREN
, PAEDUC   # HIGHEST YEAR SCHOOL COMPLETED, FATHER
, MAEDUC   # HIGHEST YEAR SCHOOL COMPLETED, MOTHER
, SEXSEX   # Sex of sex partners in the last year
, PRES16   # How voted for (i.e: liberal or not)
# New Variables to consider
, HOMPOP #NUMBER OF PERSONS IN HOUSEHOLD
, EDUC #HIGHEST YEAR OF SCHOOL COMPLETED
, SPWRKSTA #SPOUSE LABOR FORCE STATUS
, MARITAL #MARITAL STATUS
)
# Plot bar plot for 'Exercise' variable
ggplot(raw_data, aes(x = YEAR)) +
geom_bar() +
labs(title = "Number of reponses by year", x = "Year", y = "Count") +
theme_minimal()
vis_miss(data)
gg_miss_upset(data, nsets = 10, nintersects = 50)
# Drop NA's and the no answers: IAP, DONT KNOW and NO ANSWER values
data <- data %>%
filter(!is.na(MNTLHLTH) & !MNTLHLTH %in% c(-1, 98, 99))
ggplot(data, aes(x = MNTLHLTH)) +
geom_histogram(fill = "skyblue", color = "black") +
labs(title = "Distribution of days with poor mental health", x = "Number of days with poor mental health", y = "Count") +
theme_minimal()
df <- filtered_data %>%
select(
TWITTER
, LINKEDIN
, SNAPCHAT
, INSTAGRM
, FACEBOOK
)
df <- data %>%
select(
TWITTER
, LINKEDIN
, SNAPCHAT
, INSTAGRM
, FACEBOOK
)
# Assuming your data frame is named df
# Count the number of 1s in each column
counts <- colSums(df == 1)
# Plot the counts
barplot(counts, main="Count of 1s for each Social Media Platform",
xlab="Platform", ylab="Count of 1s", col="blue")
df <- data %>%
select(
TWITTER
, LINKEDIN
, SNAPCHAT
, INSTAGRM
, FACEBOOK
)
df <- data %>%
select(
TWITTER
, LINKEDIN
, SNAPCHAT
, INSTAGRM
, FACEBOOK
)
df <- data %>%
select(
TWITTER
, LINKEDIN
, SNAPCHAT
, INSTAGRM
, FACEBOOK
)
df
df <- data %>%
select(
TWITTER
, LINKEDIN
, SNAPCHAT
, INSTAGRM
, FACEBOOK
)
counts <- colSums(df == 1)
counts
df$flg_uses_twitter <- ifelse(data$TWITTER == 1, 1, 0)
# First, transform the variables to true binary variables
df$flg_uses_twitter <- ifelse(data$TWITTER == 1, 1, 0)
df$flg_uses_linkedin <- ifelse(data$LINKEDIN == 1, 1, 0)
df$flg_uses_snapchat <- ifelse(data$SNAPCHAT == 1, 1, 0)
df$flg_uses_instagram <- ifelse(data$INSTAGRM == 1, 1, 0)
df$flg_uses_facebook <- ifelse(data$FACEBOOK == 1, 1, 0)
# Step 3: Count the number of 1s in each column
counts <- colSums(df[, c("flg_uses_twitter", "flg_uses_linkedin", "flg_uses_snapchat", "flg_uses_instagram", "flg_uses_facebook")])
# Plot the counts
barplot(counts, main="Count of 1s for each Social Media Platform",
xlab="Platform", ylab="Count of 1s", col="blue", names.arg=c("Twitter", "LinkedIn", "Snapchat", "Instagram", "Facebook"))
data$flg_uses_twitter
# First, transform the variables to true binary variables
data$flg_uses_twitter <- ifelse(data$TWITTER == 1, 1, 0)
data$flg_uses_linkedin <- ifelse(data$LINKEDIN == 1, 1, 0)
data$flg_uses_snapchat <- ifelse(data$SNAPCHAT == 1, 1, 0)
data$flg_uses_instagram <- ifelse(data$INSTAGRM == 1, 1, 0)
data$flg_uses_facebook <- ifelse(data$FACEBOOK == 1, 1, 0)
data$flg_uses_twitter
# Assuming df is your data frame with the new columns
data$flg_uses_twitter <- ifelse(is.na(data$TWITTER), 0, ifelse(data$TWITTER == 1, 1, 0))
data$flg_uses_linkedin <- ifelse(is.na(data$LINKEDIN), 0, ifelse(data$LINKEDIN == 1, 1, 0))
data$flg_uses_snapchat <- ifelse(is.na(data$SNAPCHAT), 0, ifelse(data$SNAPCHAT == 1, 1, 0))
data$flg_uses_instagram <- ifelse(is.na(data$INSTAGRM), 0, ifelse(data$INSTAGRM == 1, 1, 0))
data$flg_uses_facebook <- ifelse(is.na(data$FACEBOOK), 0, ifelse(data$FACEBOOK == 1, 1, 0))
data$flg_uses_twitter
# Step 3: Count the number of 1s in each column
counts <- colSums(df[, c("flg_uses_twitter", "flg_uses_linkedin", "flg_uses_snapchat", "flg_uses_instagram", "flg_uses_facebook")])
# Plot the counts
barplot(counts, main="Count of 1s for each Social Media Platform",
xlab="Platform", ylab="Count of 1s", col="blue", names.arg=c("Twitter", "LinkedIn", "Snapchat", "Instagram", "Facebook"))
data$flg_uses_linkedin
# Step 3: Count the number of 1s in each column
counts <- colSums(data[, c("flg_uses_twitter", "flg_uses_linkedin", "flg_uses_snapchat", "flg_uses_instagram", "flg_uses_facebook")])
# Plot the counts
barplot(counts, main="Count of 1s for each Social Media Platform",
xlab="Platform", ylab="Count of 1s", col="blue", names.arg=c("Twitter", "LinkedIn", "Snapchat", "Instagram", "Facebook"))
# Step 2: Select only the binary columns
binary_df <- data[, c("flg_uses_twitter", "flg_uses_linkedin", "flg_uses_snapchat", "flg_uses_instagram", "flg_uses_facebook")]
# Step 3: Compute the correlation matrix
cor_matrix <- cor(binary_df)
# Step 4: Load the corrplot library to visualize the correlation matrix
install.packages("corrplot")  # Uncomment this line if you need to install the package
library(corrplot)
# Step 5: Plot the correlation matrix
corrplot(cor_matrix, method="color", type="upper",
tl.col="black", tl.srt=45,
title="Correlation Matrix of Social Media Usage", mar=c(0,0,1,0))
knitr::opts_chunk$set(echo = TRUE)
install.packages("haven")
install.packages("corrplot")
# Sum of distinct social networks
data$nr_unique_specific_sns <- data$flg_uses_facebook + data$flg_uses_instagram + data$flg_uses_linkedin
+ data$flg_uses_snapchat + data$flg_uses_twitter
# Flag that shows if any of these is used
data$flg_uses_specific_sns <- ifelse(data$nr_unique_specific_sns > 0 , 1, 0)
knitr::opts_chunk$set(echo = TRUE)
install.packages("haven")
install.packages("corrplot")
# Sum of distinct social networks
data$nr_unique_specific_sns <- data$flg_uses_facebook + data$flg_uses_instagram + data$flg_uses_linkedin
+ data$flg_uses_snapchat + data$flg_uses_twitter
# Flag that shows if any of these is used
data$flg_uses_specific_sns <- ifelse(data$nr_unique_specific_sns > 0 , 1, 0)
# Sum of distinct social networks
data$nr_unique_specific_sns <- data$flg_uses_facebook + data$flg_uses_instagram + data$flg_uses_linkedin + data$flg_uses_snapchat + data$flg_uses_twitter
# Flag that shows if any of these is used
data$flg_uses_specific_sns <- ifelse(data$nr_unique_specific_sns > 0 , 1, 0)
data$flg_uses_specific_sns
data$nr_unique_specific_sns
ols1 = lm(
MNTLHLTH
~ BORN
+ REGION
+ WRKSTAT  # LABOR FORCE STATUS
+ HRS1     # NUMBER OF HOURS WORKED LAST WEEK
+ INCOME16 # TOTAL FAMILY INCOME
+ RINCOM16 # Respondant's income
+ SNSMOTH1 # DO YOU USE ANY OTHER SOCIAL NETWORKS
+ total_internet_time*flg_is_male*flg_is_white
+ SNSMYEAR # SNSMYEAR
, data=data)
# This command sets the wd for the R project
#setwd("/Users/h.abdulla/Dropbox/Mac (3)/Desktop/Imperial/Modules/Y2/Term 3/Healthcare Analytics/Group Assignment/Healthcare Project")
# This is Bernardos' wd. Left it commented
#setwd("/Users/bernardocarvalho/Desktop/imperial_repos/health_care_analytics_group")
knitr::opts_chunk$set(echo = TRUE)
install.packages("haven")
install.packages("corrplot")
library(haven)
library(tidyr)
library(ggplot2)
library(dplyr)
library(stargazer)
library(stringr)
library(naniar)
library(corrplot)
# Change this if you saves the file in a different path
file = "gss_spss_with_codebook/GSS7218_R3.sav"
# Read the data file
raw_data <- read_sav(file)
# Filtering data for only 2016
data <- raw_data %>%
filter(YEAR == 2016)
# Calculate the total number of rows in the dataframe
total_rows <- nrow(data)
# Calculate the percentage of non-NA values for each column
non_na_percentage <- colSums(!is.na(data)) / total_rows
# Identify columns with more than 10% non-NA values
columns_with_more_than_40_percent_non_na <- names(non_na_percentage[non_na_percentage > 0.40])
# Print the column names
print(columns_with_more_than_40_percent_non_na)
# Selecting candidate variables
data <- data %>%
select(
# First, start with Mental health related variables
# These are the Health variables
SNSMOTH1   # DO YOU USE ANY OTHER SOCIAL NETWORKS
, INTWKDYM #  MINUTES OF INTERNET USE ON WEEKDAYS
, INTWKDYH #  HOURS OF INTERNET USE ON WEEKDAYS
, INTWKENM #  MINUTES OF INTERNET USE ON WEEKENDS
, INTWKENH #  HOURS OF INTERNET USE ON WEEKENDS
, MNTLHLTH #  DAYS OF POOR MENTAL HEALTH PAST 30 DAYS
, RHEIGHT   # R IS HOW TALL
#, LIFENOW  # R'S RATING OF LIFE OVERALL NOW FROM 0-10
#, DEPRESS  # TOLD HAVE DEPRESSION
#, HLTHPHYS # R'S PHYSICAL HEALTH
#, QUALLIFE # R'S QUALITY OF LIFE
#, HLTHMNTL # R'S MENTAL HEALTH, MOOD, AND ABILITY TO THINK.
, TWITTER  # CREATE DUMMY VARIABLE FOR THESE. IF ANY IS TRUE, MAKE IT 1, ELSE 0
, LINKEDIN
, SNAPCHAT
, INSTAGRM
, FACEBOOK
# Then, control variables
, YEAR     # GSS YEAR FOR THIS RESPONDENT
# Labour
, ID       # RESPONDENT ID NUMBER
, WRKSTAT  # LABOR FORCE STATUS
, HRS1     # NUMBER OF HOURS WORKED LAST WEEK
# , HRS2     # NUMBER OF HOURS USUALLY WORK A WEEK
#, COMMUTE  # TRAVEL TIME TO WORK
,
, # Social
, SEX      # RESPONDENTS SEX
, RACE     # RACE OF RESPONDENT
, BORN     # WAS R BORN IN THIS COUNTRY
, REGION   # REGION OF INTERVIEW
# , INCOME06 # TOTAL FAMILY INCOME
#, RINCOM06 # RESPONDENTS INCOME
, INCOME16 # TOTAL FAMILY INCOME
, RINCOM16 # RESPONDENTS INCOME
, CHILDS   # NUMBER OF CHILDREN
, PAEDUC   # HIGHEST YEAR SCHOOL COMPLETED, FATHER
, MAEDUC   # HIGHEST YEAR SCHOOL COMPLETED, MOTHER
, SEXSEX   # Sex of sex partners in the last year
, PRES16   # How voted for (i.e: liberal or not)
# New Variables to consider
, HOMPOP #NUMBER OF PERSONS IN HOUSEHOLD
, EDUC #HIGHEST YEAR OF SCHOOL COMPLETED
, SPWRKSTA #SPOUSE LABOR FORCE STATUS
, MARITAL #MARITAL STATUS
)
ols1 = lm(
MNTLHLTH
~ BORN
+ REGION
+ WRKSTAT  # LABOR FORCE STATUS
+ HRS1     # NUMBER OF HOURS WORKED LAST WEEK
+ INCOME16 # TOTAL FAMILY INCOME
+ RINCOM16 # Respondant's income
+ SNSMOTH1 # DO YOU USE ANY OTHER SOCIAL NETWORKS
+ total_internet_time*flg_is_male*flg_is_white
+ SNSMYEAR # SNSMYEAR
, data=data)
# Create new column based on minutes per week
data$hours_wkd_from_m <- ifelse(data$INTWKDYM < 20, 0, 1)
# Create new column based on minutes per weekend
data$hours_wke_from_m <- ifelse(data$INTWKENM < 20, 0, 1)
ggplot(filtered_data, aes(x = INTWKDYH)) +
geom_histogram(fill = "skyblue", color = "black") +
labs(title = "Distribution of minutes of internet usage per weekday", x = "Hours", y = "Count") +
theme_minimal()
ggplot(data, aes(x = INTWKDYH)) +
geom_histogram(fill = "skyblue", color = "black") +
labs(title = "Distribution of minutes of internet usage per weekday", x = "Hours", y = "Count") +
theme_minimal()
ggplot(data, aes(x = INTWKENH)) +
geom_histogram(fill = "skyblue", color = "black") +
labs(title = "Distribution of minutes of internet usage per weekends", x = "Hours", y = "Count") +
theme_minimal()
# Total time spent on the internet per week
data$total_internet_time <- data$hours_wkd_from_m + data$hours_wke_from_m + data$INTWKENH + data$INTWKDYH
# Plot total internet usage time per week
ggplot(data, aes(x = total_internet_time)) +
geom_histogram(fill = "skyblue", color = "black") +
labs(title = "Distribution of minutes of internet usage per weekends", x = "Hours", y = "Count") +
theme_minimal()
data$flg_is_male <- ifelse(data$SEX == 1,1,0)
ols1 = lm(
MNTLHLTH
~ BORN
+ REGION
+ WRKSTAT  # LABOR FORCE STATUS
+ HRS1     # NUMBER OF HOURS WORKED LAST WEEK
+ INCOME16 # TOTAL FAMILY INCOME
+ RINCOM16 # Respondant's income
+ SNSMOTH1 # DO YOU USE ANY OTHER SOCIAL NETWORKS
+ total_internet_time*flg_is_male*flg_is_white
+ SNSMYEAR # SNSMYEAR
, data=data)
# This command sets the wd for the R project
#setwd("/Users/h.abdulla/Dropbox/Mac (3)/Desktop/Imperial/Modules/Y2/Term 3/Healthcare Analytics/Group Assignment/Healthcare Project")
# This is Bernardos' wd. Left it commented
#setwd("/Users/bernardocarvalho/Desktop/imperial_repos/health_care_analytics_group")
knitr::opts_chunk$set(echo = TRUE)
install.packages("haven")
install.packages("corrplot")
library(haven)
library(tidyr)
library(ggplot2)
library(dplyr)
library(stargazer)
library(stringr)
library(naniar)
library(corrplot)
# Change this if you saves the file in a different path
file = "gss_spss_with_codebook/GSS7218_R3.sav"
# Read the data file
raw_data <- read_sav(file)
knitr::opts_chunk$set(echo = TRUE)
install.packages("haven")
install.packages("corrplot")
ols1 = lm(
MNTLHLTH
~ BORN
+ REGION
+ WRKSTAT  # LABOR FORCE STATUS
+ HRS1     # NUMBER OF HOURS WORKED LAST WEEK
+ INCOME16 # TOTAL FAMILY INCOME
+ RINCOM16 # Respondant's income
+ SNSMOTH1 # DO YOU USE ANY OTHER SOCIAL NETWORKS
+ total_internet_time*flg_is_male*flg_is_white
+ SNSMYEAR # SNSMYEAR
, data=data)
# Creating dummy variable for "white"
data$flg_is_white <- ifelse(data$RACE == 1, 1, 0)
ols1 = lm(
MNTLHLTH
~ BORN
+ REGION
+ WRKSTAT  # LABOR FORCE STATUS
+ HRS1     # NUMBER OF HOURS WORKED LAST WEEK
+ INCOME16 # TOTAL FAMILY INCOME
+ RINCOM16 # Respondant's income
+ SNSMOTH1 # DO YOU USE ANY OTHER SOCIAL NETWORKS
+ total_internet_time*flg_is_male*flg_is_white
+ SNSMYEAR # SNSMYEAR
+ HOMPOP
+ HEALTH1
, data=data)
ols1 = lm(
MNTLHLTH
~ BORN
+ REGION
+ WRKSTAT  # LABOR FORCE STATUS
+ HRS1     # NUMBER OF HOURS WORKED LAST WEEK
+ INCOME16 # TOTAL FAMILY INCOME
+ RINCOM16 # Respondant's income
+ flg_uses_specific_sns
+ nr_unique_specific_sns
+ total_internet_time*flg_is_male*flg_is_white
+ SNSMYEAR # SNSMYEAR
+ HOMPOP
+ HEALTH1
, data=data)
ols1 = lm(
MNTLHLTH
~ BORN
+ REGION
+ WRKSTAT  # LABOR FORCE STATUS
+ HRS1     # NUMBER OF HOURS WORKED LAST WEEK
+ INCOME16 # TOTAL FAMILY INCOME
+ RINCOM16 # Respondant's income
+ flg_uses_specific_sns
+ nr_unique_specific_sns
+ total_internet_time*flg_is_male*flg_is_white
+ SNSMYEAR # SNSMYEAR
+ HOMPOP
+ HEALTH1
, data=data)

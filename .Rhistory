} else {
result_irf_general_adwords[i] <-0
}
}
result_irf_general_adwords #print out the results
lr_general_adwords <- sum(result_irf_general_adwords)
lr_general_adwords
#Brand Adwords
result_irf_brand_adwords<-matrix(nrow = 8, ncol = 1)
for (i in 1:8) {
se <- (irfs$Upper$LbrandAds_cut[i]-irfs$Lower$LbrandAds_cut[i])/(2*1.96)
t_irf_brand_adwords<- irfs$irf$LbrandAds_cut[i]/se
if (t_irf_brand_adwords>1) {
result_irf_brand_adwords[i] <- irfs$irf$LbrandAds_cut[i]
} else {
result_irf_brand_adwords[i] <-0
}
}
result_irf_brand_adwords #print out the results
lr_brand_adwords <- sum(result_irf_brand_adwords)
lr_brand_adwords
#Brand Adwords
result_irf_brand_adwords<-matrix(nrow = 8, ncol = 1)
for (i in 1:8) {
se <- (irfs$Upper$LbrandAds_cut[i]-irfs$Lower$LbrandAds_cut[i])/(2*1.96)
t_irf_brand_adwords<- irfs$irf$LbrandAds_cut[i]/se
if (t_irf_brand_adwords>1) {
result_irf_brand_adwords[i] <- irfs$irf$LbrandAds_cut[i]
} else {
result_irf_brand_adwords[i] <-0
}
}
result_irf_brand_adwords #print out the results
lr_brand_adwords <- sum(result_irf_brand_adwords)
lr_brand_adwords
# This command sets the wd for the R project
#setwd("/Users/h.abdulla/Dropbox/Mac (3)/Desktop/Imperial/Modules/Y2/Term 3/Healthcare Analytics/Group Assignment/Healthcare Project")
# This is Bernardos' wd. Left it commented
#setwd("/Users/bernardocarvalho/Desktop/imperial_repos/health_care_analytics_group")
knitr::opts_chunk$set(echo = TRUE)
install.packages("haven")
install.packages("corrplot")
library(haven)
library(tidyr)
library(ggplot2)
library(dplyr)
library(stargazer)
library(stringr)
library(naniar)
library(corrplot)
# Change this if you saves the file in a different path
file = "gss_spss_with_codebook/GSS7218_R3.sav"
# Read the data file
raw_data <- read_sav(file)
# Filtering data for only 2016
data <- raw_data %>%
filter(YEAR == 2016)
# Calculate the total number of rows in the dataframe
total_rows <- nrow(data)
# Calculate the percentage of non-NA values for each column
non_na_percentage <- colSums(!is.na(data)) / total_rows
# Identify columns with more than 10% non-NA values
columns_with_more_than_40_percent_non_na <- names(non_na_percentage[non_na_percentage > 0.40])
# Print the column names
print(columns_with_more_than_40_percent_non_na)
# Selecting candidate variables
data <- data %>%
select(
# First, start with Mental health related variables
# These are the Health variables
SNSMOTH1   # DO YOU USE ANY OTHER SOCIAL NETWORKS
, INTWKDYM #  MINUTES OF INTERNET USE ON WEEKDAYS
, INTWKDYH #  HOURS OF INTERNET USE ON WEEKDAYS
, INTWKENM #  MINUTES OF INTERNET USE ON WEEKENDS
, INTWKENH #  HOURS OF INTERNET USE ON WEEKENDS
, MNTLHLTH #  DAYS OF POOR MENTAL HEALTH PAST 30 DAYS
, RHEIGHT   # R IS HOW TALL
#, LIFENOW  # R'S RATING OF LIFE OVERALL NOW FROM 0-10
#, DEPRESS  # TOLD HAVE DEPRESSION
#, HLTHPHYS # R'S PHYSICAL HEALTH
#, QUALLIFE # R'S QUALITY OF LIFE
#, HLTHMNTL # R'S MENTAL HEALTH, MOOD, AND ABILITY TO THINK.
, TWITTER  # CREATE DUMMY VARIABLE FOR THESE. IF ANY IS TRUE, MAKE IT 1, ELSE 0
, LINKEDIN
, SNAPCHAT
, INSTAGRM
, FACEBOOK
# Then, control variables
, YEAR     # GSS YEAR FOR THIS RESPONDENT
# Labour
, ID       # RESPONDENT ID NUMBER
, WRKSTAT  # LABOR FORCE STATUS
, HRS1     # NUMBER OF HOURS WORKED LAST WEEK
# , HRS2     # NUMBER OF HOURS USUALLY WORK A WEEK
#, COMMUTE  # TRAVEL TIME TO WORK
,
, # Social
, SEX      # RESPONDENTS SEX
, RACE     # RACE OF RESPONDENT
, BORN     # WAS R BORN IN THIS COUNTRY
, REGION   # REGION OF INTERVIEW
# , INCOME06 # TOTAL FAMILY INCOME
#, RINCOM06 # RESPONDENTS INCOME
, INCOME16 # TOTAL FAMILY INCOME
, RINCOM16 # RESPONDENTS INCOME
, CHILDS   # NUMBER OF CHILDREN
, PAEDUC   # HIGHEST YEAR SCHOOL COMPLETED, FATHER
, MAEDUC   # HIGHEST YEAR SCHOOL COMPLETED, MOTHER
, SEXSEX   # Sex of sex partners in the last year
, PRES16   # How voted for (i.e: liberal or not)
# New Variables to consider
, HOMPOP #NUMBER OF PERSONS IN HOUSEHOLD
, EDUC #HIGHEST YEAR OF SCHOOL COMPLETED
, SPWRKSTA #SPOUSE LABOR FORCE STATUS
, MARITAL #MARITAL STATUS
)
# Selecting candidate variables
data <- data %>%
select(
# First, start with Mental health related variables
# These are the Health variables
SNSMOTH1   # DO YOU USE ANY OTHER SOCIAL NETWORKS
, INTWKDYM #  MINUTES OF INTERNET USE ON WEEKDAYS
, INTWKDYH #  HOURS OF INTERNET USE ON WEEKDAYS
, INTWKENM #  MINUTES OF INTERNET USE ON WEEKENDS
, INTWKENH #  HOURS OF INTERNET USE ON WEEKENDS
, MNTLHLTH #  DAYS OF POOR MENTAL HEALTH PAST 30 DAYS
, RWEIGHT   # R IS HOW TALL
#, LIFENOW  # R'S RATING OF LIFE OVERALL NOW FROM 0-10
#, DEPRESS  # TOLD HAVE DEPRESSION
#, HLTHPHYS # R'S PHYSICAL HEALTH
#, QUALLIFE # R'S QUALITY OF LIFE
#, HLTHMNTL # R'S MENTAL HEALTH, MOOD, AND ABILITY TO THINK.
, TWITTER  # CREATE DUMMY VARIABLE FOR THESE. IF ANY IS TRUE, MAKE IT 1, ELSE 0
, LINKEDIN
, SNAPCHAT
, INSTAGRM
, FACEBOOK
# Then, control variables
, YEAR     # GSS YEAR FOR THIS RESPONDENT
# Labour
, ID       # RESPONDENT ID NUMBER
, WRKSTAT  # LABOR FORCE STATUS
, HRS1     # NUMBER OF HOURS WORKED LAST WEEK
# , HRS2     # NUMBER OF HOURS USUALLY WORK A WEEK
#, COMMUTE  # TRAVEL TIME TO WORK
,
, # Social
, SEX      # RESPONDENTS SEX
, RACE     # RACE OF RESPONDENT
, BORN     # WAS R BORN IN THIS COUNTRY
, REGION   # REGION OF INTERVIEW
# , INCOME06 # TOTAL FAMILY INCOME
#, RINCOM06 # RESPONDENTS INCOME
, INCOME16 # TOTAL FAMILY INCOME
, RINCOM16 # RESPONDENTS INCOME
, CHILDS   # NUMBER OF CHILDREN
, PAEDUC   # HIGHEST YEAR SCHOOL COMPLETED, FATHER
, MAEDUC   # HIGHEST YEAR SCHOOL COMPLETED, MOTHER
, SEXSEX   # Sex of sex partners in the last year
, PRES16   # How voted for (i.e: liberal or not)
# New Variables to consider
, HOMPOP #NUMBER OF PERSONS IN HOUSEHOLD
, EDUC #HIGHEST YEAR OF SCHOOL COMPLETED
, SPWRKSTA #SPOUSE LABOR FORCE STATUS
, MARITAL #MARITAL STATUS
)
vis_miss(data)
gg_miss_upset(data, nsets = 10, nintersects = 50)
# Drop NA's and the no answers: IAP, DONT KNOW and NO ANSWER values
data <- data %>%
filter(!is.na(MNTLHLTH) & !MNTLHLTH %in% c(-1, 98, 99))
ggplot(data, aes(x = MNTLHLTH)) +
geom_histogram(fill = "skyblue", color = "black") +
labs(title = "Distribution of days with poor mental health", x = "Number of days with poor mental health", y = "Count") +
theme_minimal()
#    , INTWKDYM #  MINUTES OF INTERNET USE ON WEEKDAYS
#    , INTWKDYH #  HOURS OF INTERNET USE ON WEEKDAYS
#    , INTWKENM #  MINUTES OF INTERNET USE ON WEEKENDS
#    , INTWKENH #  HOURS OF INTERNET USE ON WEEKENDS
ggplot(data, aes(x = INTWKDYM)) +
geom_histogram(fill = "skyblue", color = "black") +
labs(title = "Distribution of minutes of internet usage per weekday", x = "Minutes", y = "Count") +
theme_minimal()
#    , INTWKDYM #  MINUTES OF INTERNET USE ON WEEKDAYS
#    , INTWKDYH #  HOURS OF INTERNET USE ON WEEKDAYS
#    , INTWKENM #  MINUTES OF INTERNET USE ON WEEKENDS
#    , INTWKENH #  HOURS OF INTERNET USE ON WEEKENDS
ggplot(data, aes(x = INTWKENM)) +
geom_histogram(fill = "skyblue", color = "black") +
labs(title = "Distribution of minutes of internet usage per weekday", x = "Minutes", y = "Count") +
theme_minimal()
# Create new column based on minutes per week
data$hours_wkd_from_m <- ifelse(data$INTWKDYM < 20, 0, 1)
# Create new column based on minutes per weekend
data$hours_wke_from_m <- ifelse(data$INTWKENM < 20, 0, 1)
ggplot(data, aes(x = INTWKDYH)) +
geom_histogram(fill = "skyblue", color = "black") +
labs(title = "Distribution of minutes of internet usage per weekday", x = "Hours", y = "Count") +
theme_minimal()
ggplot(data, aes(x = INTWKENH)) +
geom_histogram(fill = "skyblue", color = "black") +
labs(title = "Distribution of minutes of internet usage per weekends", x = "Hours", y = "Count") +
theme_minimal()
# Total time spent on the internet per week
data$total_internet_time <- data$hours_wkd_from_m + data$hours_wke_from_m + data$INTWKENH + data$INTWKDYH
# Plot total internet usage time per week
ggplot(data, aes(x = total_internet_time)) +
geom_histogram(fill = "skyblue", color = "black") +
labs(title = "Distribution of minutes of internet usage per weekends", x = "Hours", y = "Count") +
theme_minimal()
#    , SNSMNEW  # WHICH SOCIAL NETWORK DID YOU JOIN MOST RECENTLY
# Create a bar plot using ggplot2
ggplot(data, aes(x = SNSMYEAR)) +
geom_bar(fill = "skyblue") +
labs(title = "Count of Categories", x = "Category", y = "Count") +
theme_minimal()
# Create a bar plot using ggplot2
ggplot(data, aes(x = RACE)) +
geom_bar(fill = "skyblue") +
labs(title = "Count of Categories - Race", x = "Category", y = "Count") +
theme_minimal()
# Creating dummy variable for "white"
data$flg_is_white <- ifelse(data$RACE == 1, 1, 0)
# Assuming df is your data frame with the new columns
data$flg_uses_twitter <- ifelse(is.na(data$TWITTER), 0, ifelse(data$TWITTER == 1, 1, 0))
data$flg_uses_linkedin <- ifelse(is.na(data$LINKEDIN), 0, ifelse(data$LINKEDIN == 1, 1, 0))
data$flg_uses_snapchat <- ifelse(is.na(data$SNAPCHAT), 0, ifelse(data$SNAPCHAT == 1, 1, 0))
data$flg_uses_instagram <- ifelse(is.na(data$INSTAGRM), 0, ifelse(data$INSTAGRM == 1, 1, 0))
data$flg_uses_facebook <- ifelse(is.na(data$FACEBOOK), 0, ifelse(data$FACEBOOK == 1, 1, 0))
# Step 3: Count the number of 1s in each column
counts <- colSums(data[, c("flg_uses_twitter", "flg_uses_linkedin", "flg_uses_snapchat", "flg_uses_instagram", "flg_uses_facebook")])
# Plot the counts
barplot(counts, main="Count of 1s for each Social Media Platform",
xlab="Platform", ylab="Count of 1s", col="blue", names.arg=c("Twitter", "LinkedIn", "Snapchat", "Instagram", "Facebook"))
# Selecting subset of the only the binary columns
binary_df <- data[, c("flg_uses_twitter", "flg_uses_linkedin", "flg_uses_snapchat", "flg_uses_instagram", "flg_uses_facebook")]
# Computing the correlation matrix
cor_matrix <- cor(binary_df)
# Step 5: Plot the correlation matrix
corrplot(cor_matrix, method="color", type="upper",
tl.col="black", tl.srt=45,
title="Correlation Matrix of Social Media Usage", mar=c(0,0,1,0))
# Sum of distinct social networks
data$nr_unique_specific_sns <- data$flg_uses_facebook + data$flg_uses_instagram + data$flg_uses_linkedin + data$flg_uses_snapchat + data$flg_uses_twitter
# Flag that shows if any of these is used
data$flg_uses_specific_sns <- ifelse(data$nr_unique_specific_sns > 0 , 1, 0)
# Sum of distinct social networks
data$nr_unique_specific_sns <- data$flg_uses_facebook + data$flg_uses_instagram + data$flg_uses_linkedin + data$flg_uses_snapchat + data$flg_uses_twitter
# Flag that shows if any of these is used
data$flg_uses_specific_sns <- ifelse(data$nr_unique_specific_sns > 0 , 1, 0)
#Check for NAs
missing_id <- sum(is.na(data$ID))
print(paste("Number of missing ID values:", missing_id))
#Checking for duplicates
duplicate_id <- sum(duplicated(data$ID))
print(paste("Number of duplicate ID values:", duplicate_id))
#Summary of Variable
summary(data$ID)
# Check the type of WRKSTAT
wrkstat_type <- typeof(data$WRKSTAT)
print(paste("Type of WRKSTAT:", wrkstat_type))
# Check for missing values in WRKSTAT
missing_wrkstat <- sum(is.na(data$WRKSTAT))
print(paste("Number of missing WRKSTAT values:", missing_wrkstat))
# Check the labels of WRKSTAT
wrkstat_labels <- attr(data$WRKSTAT, "labels")
print("Labels of WRKSTAT:")
print(wrkstat_labels)
# Convert WRKSTAT to factor
data$WRKSTAT <- as_factor(data$WRKSTAT)
# Verify the conversion
print(levels(data$WRKSTAT))
# Distribution of WRKSTAT variable
wrkstat_distribution <- table(data$WRKSTAT)
print("Distribution of WRKSTAT values:")
print(wrkstat_distribution)
# Visualize the distribution of WRKSTAT with color
ggplot(data, aes(x = WRKSTAT, fill = WRKSTAT)) +
geom_bar() +
labs(title = "Distribution of WRKSTAT", x = "Labor Force Status", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set3") +
theme_minimal()
# Remove rows with NA in WRKSTAT
data <- data[!is.na(data$WRKSTAT), ]
# Re-categorize WRKSTAT, combining "Other" with "Unemployed"
data$WRKSTAT <- recode(
data$WRKSTAT,
`WORKING FULLTIME` = "Employed",
`WORKING PARTTIME` = "Employed",
`UNEMPL, LAID OFF` = "Unemployed",
`TEMP NOT WORKING` = "Unemployed",
`RETIRED` = "Retired",
`SCHOOL` = "Student",
`KEEPING HOUSE` = "Homemaker",
`OTHER` = "Unemployed"
)
# Verify the new categories
print(table(data$WRKSTAT))
# Visualize the re-categorized distribution of WRKSTAT with color
ggplot(data, aes(x = WRKSTAT, fill = WRKSTAT)) +
geom_bar() +
labs(title = "Re-Categorized Distribution of WRKSTAT", x = "Labor Force Status", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set3") +
theme_minimal()
# Check the type of HRS1
hrs1_type <- typeof(data$HRS1)
print(paste("Type of HRS1:", hrs1_type))
# Check for missing values in HRS1
missing_hrs1 <- sum(is.na(data$HRS1))
print(paste("Number of missing HRS1 values:", missing_hrs1))
# Visualize the distribution of HRS1 with a histogram
ggplot(data, aes(x = HRS1)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black") +
labs(title = "Distribution of HRS1", x = "Number of Hours Worked Last Week", y = "Count") +
theme_minimal()
# Create a box plot for HRS1
ggplot(data, aes(y = HRS1)) +
geom_boxplot(fill = "orange", color = "black") +
labs(title = "Box Plot of HRS1", y = "Number of Hours Worked Last Week") +
theme_minimal()
# Summary Statistics for HRS1
summary(data$HRS1)
# Impute missing values with the median (40 hours)
median_hrs1 <- 40
data$HRS1[is.na(data$HRS1)] <- median_hrs1
# Cap outliers: set minimum to 15 and maximum to 70
data$HRS1 <- ifelse(data$HRS1 < 15, 15, data$HRS1)
data$HRS1 <- ifelse(data$HRS1 > 70, 70, data$HRS1)
# Verify the changes
summary_hrs1_after <- summary(data$HRS1)
print("Summary statistics for HRS1 after imputation and capping:")
print(summary_hrs1_after)
# Visualize the distribution of HRS1 with a histogram after changes
ggplot(data, aes(x = HRS1)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black") +
labs(title = "Distribution of HRS1 After Imputation and Capping", x = "Number of Hours Worked Last Week", y = "Count") +
theme_minimal()
# Create a box plot for HRS1 after changes
ggplot(data, aes(y = HRS1)) +
geom_boxplot(fill = "orange", color = "black") +
labs(title = "Box Plot of HRS1 After Imputation and Capping", y = "Number of Hours Worked Last Week") +
theme_minimal()
# Check the type of SEX
sex_type <- typeof(data$SEX)
print(paste("Type of SEX:", sex_type))
# Check for missing values in SEX
missing_sex <- sum(is.na(data$SEX))
print(paste("Number of missing SEX values:", missing_sex))
# Show labels of SEX
sex_labels <- attr(data$SEX, "labels")
print("Labels for SEX:")
print(sex_labels)
# Convert SEX to a factor to use labels
data$SEX <- factor(data$SEX, levels = c(1, 2), labels = c("MALE", "FEMALE"))
# Visualize the distribution of SEX with a bar plot
ggplot(data, aes(x = SEX, fill = SEX)) +
geom_bar() +
labs(title = "Distribution of SEX", x = "Sex", y = "Count") +
theme_minimal() +
scale_fill_brewer(palette = "Set3")
# Check the type of BORN
born_type <- typeof(data$BORN)
print(paste("Type of BORN:", born_type))
# Check for missing values in BORN
missing_born <- sum(is.na(data$BORN))
print(paste("Number of missing BORN values:", missing_born))
# Show labels of BORN
born_labels <- attr(data$BORN, "labels")
print("Labels for BORN:")
print(born_labels)
# Convert BORN to a factor to use labels
data$BORN <- factor(data$BORN, levels = c(1, 2, 8, 9), labels = c("YES", "NO", "DK", "NA"))
# Verify the conversion
print(levels(data$BORN))
# Visualize the distribution of BORN with a bar plot
ggplot(data, aes(x = BORN, fill = BORN)) +
geom_bar() +
labs(title = "Distribution of BORN", x = "Born in this country", y = "Count") +
theme_minimal() +
scale_fill_brewer(palette = "Set3")
# Check the type of REGION
region_type <- typeof(data$REGION)
print(paste("Type of REGION:", region_type))
# Check for missing values in REGION
missing_region <- sum(is.na(data$REGION))
print(paste("Number of missing REGION values:", missing_region))
# Show labels of REGION
region_labels <- attr(data$REGION, "labels")
print("Labels for REGION:")
print(region_labels)
# Check the type of REGION
region_type <- typeof(data$REGION)
print(paste("Type of REGION:", region_type))
# Check for missing values in REGION
missing_region <- sum(is.na(data$REGION))
print(paste("Number of missing REGION values:", missing_region))
# Show labels of REGION
region_labels <- attr(data$REGION, "labels")
print("Labels for REGION:")
print(region_labels)
# Convert REGION to a factor to use labels
data$REGION <- factor(data$REGION,
levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9),
labels = c("NEW ENGLAND", "MIDDLE ATLANTIC", "E. NOR. CENTRAL", "W. NOR. CENTRAL",
"SOUTH ATLANTIC", "E. SOU. CENTRAL", "W. SOU. CENTRAL", "MOUNTAIN", "PACIFIC"))
# Verify the conversion
print(levels(data$REGION))
# Visualize the distribution of REGION with a bar plot
ggplot(data, aes(x = REGION, fill = REGION)) +
geom_bar() +
labs(title = "Distribution of REGION", x = "Region", y = "Count") +
theme_minimal() +
scale_fill_brewer(palette = "Set3") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data$flg_is_male <- ifelse(data$SEX == 1,1,0)
ols1 = lm(
MNTLHLTH
~ BORN
+ REGION
+ WRKSTAT  # LABOR FORCE STATUS
+ HRS1     # NUMBER OF HOURS WORKED LAST WEEK
+ INCOME16 # TOTAL FAMILY INCOME
+ RINCOM16 # Respondant's income
+ SNSMOTH1 # DO YOU USE ANY OTHER SOCIAL NETWORKS
+ total_internet_time*flg_is_male*flg_is_white
+ SNSMYEAR # SNSMYEAR
, data=data)
ols1 = lm(
MNTLHLTH
~ BORN
+ REGION
+ WRKSTAT  # LABOR FORCE STATUS
+ HRS1     # NUMBER OF HOURS WORKED LAST WEEK
+ INCOME16 # TOTAL FAMILY INCOME
+ RINCOM16 # Respondant's income
+ SNSMOTH1 # DO YOU USE ANY OTHER SOCIAL NETWORKS
+ total_internet_time*flg_is_male*flg_is_white
, data=data)
stargazer(ols1,
type="text",
single.row = TRUE,
header = FALSE,
title = "Simple regression - No changes")
ols1 = lm(
MNTLHLTH
~ BORN
+ REGION
+ WRKSTAT  # LABOR FORCE STATUS
+ HRS1     # NUMBER OF HOURS WORKED LAST WEEK
+ INCOME16 # TOTAL FAMILY INCOME
+ RINCOM16 # Respondant's income
+ SNSMOTH1 # DO YOU USE ANY OTHER SOCIAL NETWORKS
+ total_internet_time*flg_is_male*flg_is_white
+ flg_uses_specific_sns
+ nr_unique_specific_sns
, data=data)
stargazer(ols1,
type="text",
single.row = TRUE,
header = FALSE,
title = "Simple regression - No changes")
# Step 3: Count the number of 1s in each column
counts <- colSums(data[, c("flg_uses_twitter", "flg_uses_linkedin", "flg_uses_snapchat", "flg_uses_instagram", "flg_uses_facebook")])
# Plot the counts
barplot(counts, main="Count of 1s for each Social Media Platform",
xlab="Platform", ylab="Count of 1s", col="lightblue", names.arg=c("Twitter", "LinkedIn", "Snapchat", "Instagram", "Facebook"))
View(result_irf_adwords)
# This command sets the wd for the R project
#setwd("/Users/h.abdulla/Dropbox/Mac (3)/Desktop/Imperial/Modules/Y2/Term 3/Healthcare Analytics/Group Assignment/Healthcare Project")
# This is Bernardos' wd. Left it commented
#setwd("/Users/bernardocarvalho/Desktop/imperial_repos/health_care_analytics_group")
knitr::opts_chunk$set(echo = TRUE)
install.packages("haven")
install.packages("corrplot")
library(haven)
library(tidyr)
library(ggplot2)
library(dplyr)
library(stargazer)
library(stringr)
library(naniar)
library(corrplot)
# Change this if you saves the file in a different path
file = "gss_spss_with_codebook/GSS7218_R3.sav"
# Read the data file
raw_data <- read_sav(file)
knitr::opts_chunk$set(echo = TRUE)
install.packages("haven")
install.packages("corrplot")
raw_data$AGE
ggplot(raw_data, aes(x = AGE)) +
geom_histogram(fill = "skyblue", color = "black") +
labs(title = "Distribution of minutes of internet usage per weekday", x = "Hours", y = "Count") +
theme_minimal()
library(haven)
library(tidyr)
library(ggplot2)
library(dplyr)
library(stargazer)
library(stringr)
library(naniar)
library(corrplot)
ggplot(raw_data, aes(x = AGE)) +
geom_histogram(fill = "skyblue", color = "black") +
labs(title = "Distribution of minutes of internet usage per weekday", x = "Hours", y = "Count") +
theme_minimal()
# Filtering data for only 2016
data <- raw_data %>%
filter(YEAR == 2016 & AGE >= 16)
